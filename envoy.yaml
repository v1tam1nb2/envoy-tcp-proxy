# Administration interface
# Envoyの統計情報、メトリック情報が確認できる
admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

# Listeners には、リクエストを受ける設定を書く
# Fillters には、どのようにリクエストを処理するかを書く
# Clusters には、リクエストの転送先を書く
static_resources:
  listeners:
    # Listenersの名前
    - name: test_listener
      address:
        socket_address:
          # コンテナなので0.0.0.0でリッスン
          address: 0.0.0.0
          # リッスンポートを指定
          port_value: 9000
      # Filter Chains and Filtersでリクエストの処理方法を定義
      filter_chains:
        - filters:
            # 利用するフィルターの種類
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                # モニタリング用途に使うメトリクス名のプレフィクス
                stat_prefix: tcp
                # リクエストを処理するクラスターの名前
                cluster: test_cluster
                # アクセスログの設定
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      # ログをJSONフォーマットで整形
                      # https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage
                      # json_format:
                      #     "protocol": "%PROTOCOL%"
                      #     "duration": "%DURATION%"
                      #     "my_custom_header": "%REQ(MY_CUSTOM_HEADER)%"

  clusters:
    # clusterの名前
    - name: test_cluster
      # タイムアウト値（デフォルトは5秒）
      connect_timeout: 30s
      # クラスターの解決に使用するサービス検出タイプ
      type: LOGICAL_DNS
      # DNS IP アドレス解決ポリシー（デフォルトはAUTO）
      # V4_ONLY が選択されている場合、DNS リゾルバーは IPv4 ファミリ内のアドレスの検索のみを実行
      # https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#enum-config-cluster-v3-cluster-dnslookupfamily
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: test_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      # 接続先のホスト
                      address: clickhouse
                      # 接続先のポート
                      port_value: 9000
